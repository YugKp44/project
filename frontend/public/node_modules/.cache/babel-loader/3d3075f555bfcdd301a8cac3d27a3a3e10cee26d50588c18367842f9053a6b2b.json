{"ast":null,"code":"var _jsxFileName = \"E:\\\\bolt-backend2\\\\project\\\\frontend\\\\src\\\\AnalyticsData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Bar } from 'react-chartjs-2'; // Import Bar chart component\nimport { Chart as ChartJS, Title, Tooltip, Legend, CategoryScale, LinearScale, BarElement } from 'chart.js';\n\n// Register necessary Chart.js components for bar chart\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(Title, Tooltip, Legend, CategoryScale, LinearScale, BarElement);\nconst AnalyticsData = () => {\n  _s();\n  const [analytics, setAnalytics] = useState(null); // Changed to null since it's an object, not an array\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchAnalytics = async () => {\n      try {\n        console.log('Fetching analytics data...');\n        const response = await fetch('http://localhost:3000/api/analytics');\n        console.log('Backend Response:', response);\n        if (!response.ok) {\n          throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        const result = await response.json();\n        console.log('Fetched Data:', result); // Log the entire response\n\n        // Check if result has the expected format\n        if (result && result.success && result.data) {\n          setAnalytics(result.data); // Directly set the data object\n        } else {\n          throw new Error('Invalid data format');\n        }\n      } catch (err) {\n        console.error('Error while fetching data:', err);\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchAnalytics();\n  }, []);\n\n  // If still loading, show loading message\n  if (loading) {\n    console.log('Loading data...');\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 16\n    }, this);\n  }\n\n  // If there was an error, show error message\n  if (error) {\n    console.error('An error occurred:', error);\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Prepare data for the chart\n  const chartData = {\n    labels: ['Users', 'Page Views', 'Engagement Duration'],\n    // X-axis labels for each metric\n    datasets: [{\n      label: 'Analytics Metrics',\n      // Label for the dataset\n      data: [analytics.Users, analytics.PageViews, analytics.EngagementDuration],\n      // Values for each metric\n      backgroundColor: ['rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'],\n      // Bar colors\n      borderColor: ['rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'],\n      // Bar border colors\n      borderWidth: 1\n    }]\n  };\n\n  // Chart options\n  const chartOptions = {\n    responsive: true,\n    plugins: {\n      title: {\n        display: true,\n        text: 'Analytics Data' // Title for the chart\n      },\n      tooltip: {\n        callbacks: {\n          label: function (tooltipItem) {\n            return `${tooltipItem.dataset.label}: ${tooltipItem.raw}`;\n          }\n        }\n      }\n    },\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'Metrics' // Label for X-axis\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Values' // Label for Y-axis\n        },\n        beginAtZero: true // Make sure the Y-axis starts at 0\n      }\n    }\n  };\n\n  // Render the chart\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Analytics Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Bar, {\n      data: chartData,\n      options: chartOptions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n};\n_s(AnalyticsData, \"xbE5MGsyKiGVEYptNbphsbsZAfI=\");\n_c = AnalyticsData;\nexport default AnalyticsData;\nvar _c;\n$RefreshReg$(_c, \"AnalyticsData\");","map":{"version":3,"names":["React","useEffect","useState","Bar","Chart","ChartJS","Title","Tooltip","Legend","CategoryScale","LinearScale","BarElement","jsxDEV","_jsxDEV","register","AnalyticsData","_s","analytics","setAnalytics","loading","setLoading","error","setError","fetchAnalytics","console","log","response","fetch","ok","Error","status","result","json","success","data","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","chartData","labels","datasets","label","Users","PageViews","EngagementDuration","backgroundColor","borderColor","borderWidth","chartOptions","responsive","plugins","title","display","text","tooltip","callbacks","tooltipItem","dataset","raw","scales","x","y","beginAtZero","options","_c","$RefreshReg$"],"sources":["E:/bolt-backend2/project/frontend/src/AnalyticsData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Bar } from 'react-chartjs-2'; // Import Bar chart component\r\nimport { Chart as ChartJS, Title, Tooltip, Legend, CategoryScale, LinearScale, BarElement } from 'chart.js';\r\n\r\n// Register necessary Chart.js components for bar chart\r\nChartJS.register(\r\n  Title,\r\n  Tooltip,\r\n  Legend,\r\n  CategoryScale,\r\n  LinearScale,\r\n  BarElement\r\n);\r\n\r\nconst AnalyticsData = () => {\r\n    const [analytics, setAnalytics] = useState(null); // Changed to null since it's an object, not an array\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchAnalytics = async () => {\r\n            try {\r\n                console.log('Fetching analytics data...');\r\n                \r\n                const response = await fetch('http://localhost:3000/api/analytics');\r\n                console.log('Backend Response:', response);\r\n\r\n                if (!response.ok) {\r\n                    throw new Error(`HTTP error! status: ${response.status}`);\r\n                }\r\n\r\n                const result = await response.json();\r\n                console.log('Fetched Data:', result); // Log the entire response\r\n\r\n                // Check if result has the expected format\r\n                if (result && result.success && result.data) {\r\n                    setAnalytics(result.data); // Directly set the data object\r\n                } else {\r\n                    throw new Error('Invalid data format');\r\n                }\r\n            } catch (err) {\r\n                console.error('Error while fetching data:', err);\r\n                setError(err.message);\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchAnalytics();\r\n    }, []);\r\n\r\n    // If still loading, show loading message\r\n    if (loading) {\r\n        console.log('Loading data...');\r\n        return <p>Loading...</p>;\r\n    }\r\n\r\n    // If there was an error, show error message\r\n    if (error) {\r\n        console.error('An error occurred:', error);\r\n        return <p>Error: {error}</p>;\r\n    }\r\n\r\n    // Prepare data for the chart\r\n    const chartData = {\r\n        labels: ['Users', 'Page Views', 'Engagement Duration'], // X-axis labels for each metric\r\n        datasets: [\r\n            {\r\n                label: 'Analytics Metrics', // Label for the dataset\r\n                data: [analytics.Users, analytics.PageViews, analytics.EngagementDuration], // Values for each metric\r\n                backgroundColor: ['rgba(75, 192, 192, 0.2)', 'rgba(153, 102, 255, 0.2)', 'rgba(255, 159, 64, 0.2)'], // Bar colors\r\n                borderColor: ['rgba(75, 192, 192, 1)', 'rgba(153, 102, 255, 1)', 'rgba(255, 159, 64, 1)'], // Bar border colors\r\n                borderWidth: 1,\r\n            },\r\n        ],\r\n    };\r\n\r\n    // Chart options\r\n    const chartOptions = {\r\n        responsive: true,\r\n        plugins: {\r\n            title: {\r\n                display: true,\r\n                text: 'Analytics Data', // Title for the chart\r\n            },\r\n            tooltip: {\r\n                callbacks: {\r\n                    label: function (tooltipItem) {\r\n                        return `${tooltipItem.dataset.label}: ${tooltipItem.raw}`;\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        scales: {\r\n            x: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Metrics', // Label for X-axis\r\n                },\r\n            },\r\n            y: {\r\n                title: {\r\n                    display: true,\r\n                    text: 'Values', // Label for Y-axis\r\n                },\r\n                beginAtZero: true, // Make sure the Y-axis starts at 0\r\n            },\r\n        },\r\n    };\r\n\r\n    // Render the chart\r\n    return (\r\n        <div>\r\n            <h1>Analytics Data</h1>\r\n            <Bar data={chartData} options={chartOptions} /> {/* Render the bar chart */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnalyticsData;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,QAAQ,iBAAiB,CAAC,CAAC;AACvC,SAASC,KAAK,IAAIC,OAAO,EAAEC,KAAK,EAAEC,OAAO,EAAEC,MAAM,EAAEC,aAAa,EAAEC,WAAW,EAAEC,UAAU,QAAQ,UAAU;;AAE3G;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAR,OAAO,CAACS,QAAQ,CACdR,KAAK,EACLC,OAAO,EACPC,MAAM,EACNC,aAAa,EACbC,WAAW,EACXC,UACF,CAAC;AAED,MAAMI,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAClD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMsB,cAAc,GAAG,MAAAA,CAAA,KAAY;MAC/B,IAAI;QACAC,OAAO,CAACC,GAAG,CAAC,4BAA4B,CAAC;QAEzC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;QACnEH,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEC,QAAQ,CAAC;QAE1C,IAAI,CAACA,QAAQ,CAACE,EAAE,EAAE;UACd,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;QAC7D;QAEA,MAAMC,MAAM,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACpCR,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEM,MAAM,CAAC,CAAC,CAAC;;QAEtC;QACA,IAAIA,MAAM,IAAIA,MAAM,CAACE,OAAO,IAAIF,MAAM,CAACG,IAAI,EAAE;UACzChB,YAAY,CAACa,MAAM,CAACG,IAAI,CAAC,CAAC,CAAC;QAC/B,CAAC,MAAM;UACH,MAAM,IAAIL,KAAK,CAAC,qBAAqB,CAAC;QAC1C;MACJ,CAAC,CAAC,OAAOM,GAAG,EAAE;QACVX,OAAO,CAACH,KAAK,CAAC,4BAA4B,EAAEc,GAAG,CAAC;QAChDb,QAAQ,CAACa,GAAG,CAACC,OAAO,CAAC;MACzB,CAAC,SAAS;QACNhB,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,IAAIJ,OAAO,EAAE;IACTK,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;IAC9B,oBAAOZ,OAAA;MAAAwB,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAC5B;;EAEA;EACA,IAAIpB,KAAK,EAAE;IACPG,OAAO,CAACH,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC1C,oBAAOR,OAAA;MAAAwB,QAAA,GAAG,SAAO,EAAChB,KAAK;IAAA;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAChC;;EAEA;EACA,MAAMC,SAAS,GAAG;IACdC,MAAM,EAAE,CAAC,OAAO,EAAE,YAAY,EAAE,qBAAqB,CAAC;IAAE;IACxDC,QAAQ,EAAE,CACN;MACIC,KAAK,EAAE,mBAAmB;MAAE;MAC5BX,IAAI,EAAE,CAACjB,SAAS,CAAC6B,KAAK,EAAE7B,SAAS,CAAC8B,SAAS,EAAE9B,SAAS,CAAC+B,kBAAkB,CAAC;MAAE;MAC5EC,eAAe,EAAE,CAAC,yBAAyB,EAAE,0BAA0B,EAAE,yBAAyB,CAAC;MAAE;MACrGC,WAAW,EAAE,CAAC,uBAAuB,EAAE,wBAAwB,EAAE,uBAAuB,CAAC;MAAE;MAC3FC,WAAW,EAAE;IACjB,CAAC;EAET,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG;IACjBC,UAAU,EAAE,IAAI;IAChBC,OAAO,EAAE;MACLC,KAAK,EAAE;QACHC,OAAO,EAAE,IAAI;QACbC,IAAI,EAAE,gBAAgB,CAAE;MAC5B,CAAC;MACDC,OAAO,EAAE;QACLC,SAAS,EAAE;UACPd,KAAK,EAAE,SAAAA,CAAUe,WAAW,EAAE;YAC1B,OAAO,GAAGA,WAAW,CAACC,OAAO,CAAChB,KAAK,KAAKe,WAAW,CAACE,GAAG,EAAE;UAC7D;QACJ;MACJ;IACJ,CAAC;IACDC,MAAM,EAAE;MACJC,CAAC,EAAE;QACCT,KAAK,EAAE;UACHC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE,SAAS,CAAE;QACrB;MACJ,CAAC;MACDQ,CAAC,EAAE;QACCV,KAAK,EAAE;UACHC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE,QAAQ,CAAE;QACpB,CAAC;QACDS,WAAW,EAAE,IAAI,CAAE;MACvB;IACJ;EACJ,CAAC;;EAED;EACA,oBACIrD,OAAA;IAAAwB,QAAA,gBACIxB,OAAA;MAAAwB,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvB5B,OAAA,CAACV,GAAG;MAAC+B,IAAI,EAAEQ,SAAU;MAACyB,OAAO,EAAEf;IAAa;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,KAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC/C,CAAC;AAEd,CAAC;AAACzB,EAAA,CAvGID,aAAa;AAAAqD,EAAA,GAAbrD,aAAa;AAyGnB,eAAeA,aAAa;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}